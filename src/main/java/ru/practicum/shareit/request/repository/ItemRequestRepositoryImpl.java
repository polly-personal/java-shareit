package ru.practicum.shareit.request.repository;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Repository;
import ru.practicum.shareit.request.model.ItemRequest;
import ru.practicum.shareit.request.dto.ItemRequestDto;
import ru.practicum.shareit.request.exception.ItemRequestIdNotFoundException;
import ru.practicum.shareit.request.mapper.ItemRequestMapper;
import ru.practicum.shareit.user.exception.ThisUserAlreadyExistException;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

@Slf4j
@RequiredArgsConstructor
@Repository
public class ItemRequestRepositoryImpl implements ItemRequestRepository {
    private final ItemRequestMapper itemRequestMapper;

    private Map<Long, ItemRequest> requests;
    private Long id;

    @Override
    public ItemRequestDto create(ItemRequest itemRequest) {
        if (requests == null) {
            requests = new HashMap<>();
        }

        if (!requests.containsValue(itemRequest)) {
            itemRequest.setId(getId());
            itemRequest.setCreated(LocalDateTime.now());

            Long id = itemRequest.getId();
            requests.put(id, itemRequest);
            log.info("üü© –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–æ–∑–¥–∞–Ω –∑–∞–ø—Ä–æ—Å –≤–µ—â–∏ (ItemRequest): " + itemRequest);

            return itemRequestMapper.toRequestDto(itemRequest);
        }

        log.info("üü©üüß –∑–∞–ø—Ä–æ—Å –≤–µ—â–∏ (ItemRequest) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ù–ï —Å–æ–∑–¥–∞–Ω: " + itemRequest);
        throw new ThisUserAlreadyExistException("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id: " + itemRequest.getRequestor() + " —É–∂–µ —Å–æ–∑–¥–∞–ª –∑–∞–ø—Ä–æ—Å —ç—Ç–æ–π –≤–µ—â–∏");
    }

    @Override
    public void idIsExists(Long id) {
        if (requests != null && !requests.containsKey(id)) {
            throw new ItemRequestIdNotFoundException("–≤–≤–µ–¥–µ–Ω –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π id –∑–∞–ø—Ä–æ—Å–∞ –≤–µ—â–∏ (ItemRequest): " + id);
        }
    }

    private Long getId() {
        if (id == null) {
            id = 0L;
        }
        return ++id;
    }
}
